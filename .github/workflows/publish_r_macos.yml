name: publish_r_macos

on:
  # Permit calling the workflow from outside (https://github.com/actions/runner/discussions/1884)
  workflow_call:
    inputs:
      external_call:
        description: 'To distinguish workflow_call from other events'
        type: boolean
        required: false
        default: true
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''
      external_call:
        description: 'To distinguish workflow_call from other events'
        type: boolean
        required: false
        default: false
        
env:
  BUILD_TYPE: Release
  BUILD_DIR : build
  SWIG_ROOT : ${{github.workspace}}/swig_420b
  EIGEN_ROOT : ${{github.workspace}}/eigen
  EIGEN_VERSION : "3.4.0"
  
jobs:
  build:
    runs-on: ${{matrix.arch.ar}}
    strategy:
      matrix:
        # Last releases from here https://cran.r-project.org/src/base/R-4/
        r_version: [4.0.5, 4.1.3, 4.2.3, 4.3.2]
        arch: [
            {ar: x86_64, os: macos-12, pat: /usr/local},
            {ar: arm64,  os: macos-14, pat: /opt/homebrew}
         ]
        exclude:
          - arch: {ar: x86_64}
            r_version: 4.3.2
          - arch: {ar: arm64}
            r_version: 4.0.5

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: brew install llvm
      
    - name: Setup R Version
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{matrix.r_version}}

    - name: Install the customized SWIG from source
      uses: fabien-ors/install-swig-unix-action@v1
      with:
        swig-root: ${{env.SWIG_ROOT}}
        generator: "Unix Makefiles"

    - name : Download, uncompressed and install Eigen headers
      shell: bash
      run: |
        EIGEN_URL="https://gitlab.com/libeigen/eigen/-/archive/${{env.EIGEN_VERSION}}/eigen-${{env.EIGEN_VERSION}}.zip"
        mkdir ${{env.EIGEN_ROOT}}
        mkdir eigen_src
        curl --progress-bar --location --output eigen_src/download.zip $EIGEN_URL
        7z -oeigen_src x eigen_src/download.zip -y -bd
        cd eigen_src
        cd eigen-*
        cmake -Bbuild -DCMAKE_INSTALL_PREFIX="${{env.EIGEN_ROOT}}" -DCMAKE_Fortran_COMPILER=""
        cmake --build build --target install

    - name : Build the package and save generated file name in the environment
#        CC=${{matrix.arch.pat}}/opt/llvm/bin/clang CXX=${{matrix.arch.pat}}/opt/llvm/bin/clang++ cmake -B${{env.BUILD_DIR}} -DCMAKE_OSX_ARCHITECTURES=${{matrix.arch[0]}} -DCMAKE_BUILD_TYPE:STRING=${{env.BUILD_TYPE}} -DBUILD_R=ON -DSWIG_EXECUTABLE=${{env.SWIG_ROOT}}/bin/swig
      run : |
        CC=${{matrix.arch.pat}}/opt/llvm/bin/clang CXX=${{matrix.arch.pat}}/opt/llvm/bin/clang++ cmake -B${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE:STRING=${{env.BUILD_TYPE}} -DBUILD_R=ON -DSWIG_EXECUTABLE=${{env.SWIG_ROOT}}/bin/swig
        cmake --build ${{env.BUILD_DIR}} --target r_install
        echo "MY_PKG=$(ls ${{env.BUILD_DIR}}/r/${{env.BUILD_TYPE}}/swigex0_*.tgz)" >> "$GITHUB_ENV"

    - uses: actions/upload-artifact@v3
      # Use specific artifact identifier for publishing all versions
      with:
        name: macos-r-package-${{matrix.arch[0]}}-${{matrix.r_version}}
        path: ${{env.MY_PKG}}
    
  publish:
    needs: build
    if: ${{inputs.external_call == false}}
    
    # Only ubuntu can upload via ssh
    runs-on: ubuntu-latest
    
    steps:
    - uses: fabien-ors/cran-publish-action@v1
      with:
        host: ${{secrets.CG_HOST}}
        username: ${{secrets.CG_USR}}
        password: ${{secrets.CG_PWD}}
        repo-path: "/var/www/html/cran"

    #Â Delete the artifacts (for freeing storage space under github)
    - uses: geekyeggo/delete-artifact@v2
      with:
        name: macos-r-package-*

