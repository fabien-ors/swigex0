name: nonreg-tests_macos-latest2

on:
  # Permit calling trigger
  workflow_call:
  # Activate the workflow at each push on test_features branch
  push:
    branches: [ test_features ]
  # Activate the workflow at each pull request on main branch
  #pull_request:
  #  branches: [ main ]
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  BUILD_TYPE: Release
  BUILD_DIR : build
  EIGEN_ROOT : ${{github.workspace}}/eigen
  EIGEN_VERSION : "3.4.0"

jobs:
  build:
    runs-on: macos-12
    strategy:
      matrix:
        python:
          # Double quote for version is needed otherwise 3.10 => 3.1
          - ["3.8",  1.20.3]
          - ["3.9",  1.20.3]
          - ["3.10", 1.21.6]
          - ["3.11", 1.23.5]
          - ["3.12", 1.26.3]
        arch:
          - [x86_64, macosx_12_0_x86_64]
          - [arm64,  macosx_12_0_arm64]
        exclude:
          - arch: [arm64,  macosx_12_0_arm64]
            python: ["3.8", "3.9"]
            
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: brew install llvm
      
    - name: Setup Python Version
      uses: actions/setup-python@v3
      with:
        python-version: ${{matrix.python[0]}}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==${{matrix.python[1]}}

    - name : Download, uncompressed and install Eigen headers
      shell: bash
      run: |
        EIGEN_URL="https://gitlab.com/libeigen/eigen/-/archive/${{env.EIGEN_VERSION}}/eigen-${{env.EIGEN_VERSION}}.zip"
        mkdir ${{env.EIGEN_ROOT}}
        mkdir eigen_src
        curl --progress-bar --location --output eigen_src/download.zip $EIGEN_URL
        7z -oeigen_src x eigen_src/download.zip -y -bd
        cd eigen_src
        cd eigen-*
        cmake -Bbuild -DCMAKE_INSTALL_PREFIX="${{env.EIGEN_ROOT}}" -DCMAKE_Fortran_COMPILER=""
        cmake --build build --target install

    - name : Create Wheels
      run : |
        CC=/usr/local/opt/llvm/bin/clang CXX=/usr/local/opt/llvm/bin/clang++ cmake -B${{env.BUILD_DIR}} -DCMAKE_OSX_ARCHITECTURES=${{matrix.arch[0]}} -DCMAKE_BUILD_TYPE:STRING=${{env.BUILD_TYPE}} -DPython3_ROOT_DIR="${{env.pythonLocation}}" -DBUILD_PYTHON=ON -DBUILD_DOXYGEN=ON -DEigen3_ROOT=${{env.EIGEN_ROOT}} 
        cmake --build ${{env.BUILD_DIR}} --target check -- -j 3

