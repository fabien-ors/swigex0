name: publish_python_macos

on:
  # Permit calling the workflow from outside (https://github.com/actions/runner/discussions/1884)
  workflow_call:
    inputs:
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: true
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: false

env:
  BUILD_TYPE: Release
  BUILD_DIR : build

jobs:
  build:
    runs-on: ${{matrix.arch.os}}
    strategy:
      matrix:
        # Python version + Numpy version
        python: [
          # Double quote for version is needed otherwise 3.10 => 3.1
            {py: "3.8",  nu: 1.20.3},
            {py: "3.9",  nu: 1.20.3},
            {py: "3.10", nu: 1.21.6},
            {py: "3.11", nu: 1.23.5},
            {py: "3.12", nu: 1.26.3}
          ]
        arch: [
            {ar: x86_64, os: macos-12, pat: /usr/local},
            {ar: arm64,  os: macos-14, pat: /opt/homebrew}
          ]
        exclude:
          - arch: {os: macos-14}
            python: {py: "3.8"}
          - arch: {os: macos-14}
            python: {py: "3.9"}

    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: brew install swig
      
    - name: Setup Python Version
      uses: actions/setup-python@v3
      with:
        python-version: ${{matrix.python.py}}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==${{matrix.python.nu}} twine wheel setuptools

    - name : Create Wheels
      run : |
        cmake -B${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE:STRING=${{env.BUILD_TYPE}} -DPython3_ROOT_DIR="${{env.pythonLocation}}" -DBUILD_PYTHON=ON
        cmake --build ${{env.BUILD_DIR}} --target python_build
        cd ${{env.BUILD_DIR}}/python/${{env.BUILD_TYPE}}
        # Note: wheel must be declared not pure (see setup.py)
        python setup.py bdist_wheel
        cd ../../..
        echo "MY_PKG=$(ls ${{env.BUILD_DIR}}/python/${{env.BUILD_TYPE}}/dist/*)" >> "$GITHUB_ENV"

    - uses: actions/upload-artifact@v3
      # Use specific artifact identifier for publishing all versions
      with:
        name: macos-python-package-${{matrix.arch.os}}-${{matrix.python.py}}
        path: ${{env.MY_PKG}}
    
  publish:
    needs: build
    if: ${{inputs.dry_publish == false}}
    
    # Only ubuntu can upload via ssh
    runs-on: ubuntu-latest
    
    steps:
    - uses: fabien-ors/pypi-publish-action@v1
      with:
        repo: pypi
        username: __token__
        password: ${{secrets.TWINE_PYPI_PWD}}
        pattern: macos-python-package-*

    #Â Delete the artifacts (for freeing storage space under github)
    - uses: geekyeggo/delete-artifact@v2
      with:
        name: macos-python-package-*

