name: publish_python_windows

on:
  # Permit calling the workflow from outside (https://github.com/actions/runner/discussions/1884)
  workflow_call:
    inputs:
      external_call:
        description: 'To distinguish workflow_call from other events'
        type: boolean
        required: false
        default: true
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''
      external_call:
        description: 'To distinguish workflow_call from other events'
        type: boolean
        required: false
        default: false

env:
  BUILD_TYPE: Release
  BUILD_DIR : build
  GENERATOR : "Visual Studio 16 2019"
  EIGEN_ROOT : ${{github.workspace}}/eigen
  EIGEN_VERSION : "3.4.0"

jobs:
  build:
    runs-on: windows-2019
    strategy:
      matrix:
        # Python version + Numpy version
        python: [
          # Double quote for version is needed otherwise 3.10 => 3.1
            {py: "3.8",  nu: 1.20.3},
            {py: "3.9",  nu: 1.20.3},
            {py: "3.10", nu: 1.21.6},
            {py: "3.11", nu: 1.23.5},
            {py: "3.12", nu: 1.26.3}
          ]
        arch: [
            {pl: win_amd64, ar: x64, of: x64},
            {pl: win32,     ar: x86, of: Win32} # TODO : Win32 to be removed ?
          ]

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python Version
      uses: actions/setup-python@v3
      with:
        python-version: ${{matrix.python.py}}
        architecture: ${{matrix.arch.ar}}

    - name: Install Python dependencies
      # Force specific old version for Numpy
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==${{matrix.python.nu}} twine wheel setuptools

    - name : Download, uncompressed and install Eigen headers
      shell: powershell
      run: |
        $EIGEN_URL="https://gitlab.com/libeigen/eigen/-/archive/${{env.EIGEN_VERSION}}/eigen-${{env.EIGEN_VERSION}}.zip"
        mkdir ${{env.EIGEN_ROOT}}
        mkdir eigen_src
        Invoke-WebRequest -Uri "$EIGEN_URL" -OutFile eigen_src/download.zip
        7z -oeigen_src x eigen_src/download.zip -y -bd
        cd eigen_src
        cd eigen-*
        cmake -Bbuild -DCMAKE_INSTALL_PREFIX="${{env.EIGEN_ROOT}}" -DCMAKE_Fortran_COMPILER=""
        cmake --build build --target install

    - name : Create Wheels
      run : |
        cmake -B${{env.BUILD_DIR}} -G "${{env.GENERATOR}}" -A ${{matrix.arch.of}} -DPython3_ROOT_DIR="${{env.pythonLocation}}" -DBUILD_PYTHON=ON -DEigen3_ROOT=${{env.EIGEN_ROOT}}
        cmake --build ${{env.BUILD_DIR}} --target python_build --config ${{env.BUILD_TYPE}}
        cd ${{env.BUILD_DIR}}\python\${{env.BUILD_TYPE}}
        # Note: wheel must be declared not pure (see setup.py)
        python setup.py bdist_wheel --plat-name=${{matrix.arch.pl}}
        cd ..\..\..
        echo "MY_PKG=$(ls ${{env.BUILD_DIR}}\python\${{env.BUILD_TYPE}}\dist\*)" >> "$GITHUB_ENV"

    - uses: actions/upload-artifact@v3
      # Use specific artifact identifier for publishing all versions
      with:
        name: windows-python-package-${{matrix.arch.ar}}-${{matrix.python.py}}
        path: ${{env.MY_PKG}}
    
  publish:
    needs: build
    if: ${{inputs.external_call == false}}
    
    # Only ubuntu can upload via ssh
    runs-on: ubuntu-latest
    
    steps:
    - uses: fabien-ors/pypi-publish-action@v1
      with:
        repo: pypi
        username: __token__
        password: ${{secrets.TWINE_PYPI_PWD}}
        pattern: windows-python-package-*

    # Delete the artifacts (for freeing storage space under github)
    - uses: geekyeggo/delete-artifact@v2
      with:
        name: windows-python-package-*

