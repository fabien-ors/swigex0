name: nonreg-tests_ubuntu-latest

on:
  # Permit calling trigger
  workflow_call:
  # Activate the workflow at each push on main branch
  #push:
  #  branches: [ main ]
  # Activate the workflow at each pull request on main branch
  #pull_request:
  #  branches: [ main ]
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  CMAKE_BUILD_TYPE : Release
  BUILD_DIR : build
  PYTHON_VERSION : "3.11"
  NUMPY_VERSION : "1.23.5"
  R_VERSION : "4.3.2"
  SWIG_ROOT : ${{github.workspace}}/swig_420b

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python Version
      uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==${{env.NUMPY_VERSION}}

    - name: Setup R Version
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{env.R_VERSION}}

    - name: Install the customized SWIG from source
      uses: fabien-ors/install-swig-unix-action@v1
      with:
        swig-root: ${{env.SWIG_ROOT}}
        generator: "Unix Makefiles"

    - name: Configure build directory
      run: |
        cmake \
          -B${{ env.BUILD_DIR }} \
          -DBUILD_PYTHON=ON \
          -DBUILD_R=ON \
          -DSWIG_EXECUTABLE=${{env.SWIG_ROOT}}/bin/swig

    - name: Build the package
      run: |
        cmake --build ${{env.BUILD_DIR}} --parallel 3

    - name: Install packages and execute non-regression tests
      run: |
        cmake --build ${{env.BUILD_DIR}} --parallel 3 --target check

    - name: Compress output logs
      if: success() || failure()
      run: |
        cd ${{env.BUILD_DIR}}/tests
        find . -type f -name "*.out" -print0 | tar -czvf ubuntu-logs.tar.gz --null -T -

    - name: Publish output logs as artefact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ubuntu-nonreg-logs
        path: ${{env.BUILD_DIR}}/tests/ubuntu-logs.tar.gz

