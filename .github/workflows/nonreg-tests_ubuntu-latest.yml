name: nonreg-tests_ubuntu-latest

on:
  # Permit calling trigger
  workflow_call:
  # Activate the workflow at each push on main branch
  #push:
  #  branches: [ main ]
  # Activate the workflow at each pull request on main branch
  #pull_request:
  #  branches: [ main ]
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  BUILD_DIR : build
  PYTHON_VERSION : "3.11"
  NUMPY_VERSION : "1.23.5"
  R_VERSION : "4.3.2"
  SWIG_ROOT : ${{github.workspace}}/swig_420b
  EIGEN_ROOT : ${{github.workspace}}/eigen
  EIGEN_VERSION : "3.4.0"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -yq libopenmpi-dev

    - name : Download, uncompressed and install Eigen headers
      shell: bash
      run: |
        EIGEN_URL="https://gitlab.com/libeigen/eigen/-/archive/${{env.EIGEN_VERSION}}/eigen-${{env.EIGEN_VERSION}}.zip"
        mkdir ${{env.EIGEN_ROOT}}
        mkdir eigen_src
        curl --progress-bar --location --output eigen_src/download.zip $EIGEN_URL
        7z -oeigen_src x eigen_src/download.zip -y -bd
        cd eigen_src
        cd eigen-*
        cmake -Bbuild -G "${{inputs.generator}}" -DCMAKE_INSTALL_PREFIX="${{env.EIGEN_ROOT}}" -DCMAKE_Fortran_COMPILER=""
        cmake --build build --target install

    - name: Setup Python Version
      uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install numpy
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==${{env.NUMPY_VERSION}}

    - name: Setup R Version
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{env.R_VERSION}}

    - name: Install the customized SWIG from source
      uses: fabien-ors/install-swig-unix-action@v1
      with:
        swig-root: ${{env.SWIG_ROOT}}
        generator: "Unix Makefiles"

    - name: Configure CMake
      run: cmake -B ${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_PYTHON=ON -DBUILD_R=ON -DSWIG_EXECUTABLE=${{env.SWIG_ROOT}}/bin/swig -DEigen3_ROOT=${{env.EIGEN_ROOT}}

    - name: Compile, install packages and execute non-regression tests
      run: cmake --build ${{env.BUILD_DIR}} --target check