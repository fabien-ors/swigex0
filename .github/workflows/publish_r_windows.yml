name: publish_r_windows

on:
  # Permit calling the workflow from outside (https://github.com/actions/runner/discussions/1884)
  workflow_call:
    inputs:
      external_call:
        description: 'To distinguish workflow_call from other events'
        type: boolean
        required: false
        default: true
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''
      external_call:
        description: 'To distinguish workflow_call from other events'
        type: boolean
        required: false
        default: false

env:
  # Customize the CMake build type here (Release, Debug)
  BUILD_TYPE: Release
  BUILD_DIR : build
  SWIG_ROOT : ${{github.workspace}}\swig_420b
  EIGEN_ROOT : ${{github.workspace}}\eigen
  EIGEN_VERSION : "3.4.0"

jobs:
  
  build:
    runs-on: windows-2019
    strategy:
      matrix:
        # Last releases from here https://cran.r-project.org/src/base/R-4/
        r_version: [4.0.5, 4.1.3, 4.2.3 , 4.3.2]
        
    steps:
    - uses: actions/checkout@v3

    - name: Setup R Version
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{matrix.r_version}}

    - name: Install the customized SWIG from source
      uses: fabien-ors/install-swig-windows-action@v2
      with:
        swig-root: ${{env.SWIG_ROOT}}

    - name : Download, uncompressed and install Eigen headers
      shell: powershell
      run: |
        $EIGEN_URL="https://gitlab.com/libeigen/eigen/-/archive/${{env.EIGEN_VERSION}}/eigen-${{env.EIGEN_VERSION}}.zip"
        mkdir ${{env.EIGEN_ROOT}}
        mkdir eigen_src
        Invoke-WebRequest -Uri "$EIGEN_URL" -OutFile eigen_src/download.zip
        7z -oeigen_src x eigen_src/download.zip -y -bd
        cd eigen_src
        cd eigen-*
        cmake -Bbuild  -DCMAKE_INSTALL_PREFIX="${{env.EIGEN_ROOT}}" -DCMAKE_Fortran_COMPILER=""
        cmake --build build --target install

    - name : Build the package and save generated file name in the environment
      run : |
        cmake -B${{env.BUILD_DIR}} -G "MSYS Makefiles" -DCMAKE_BUILD_TYPE:STRING=${{env.BUILD_TYPE}} -DBUILD_R=ON -DBUILD_PYTHON=OFF -DSWIG_EXECUTABLE=${{env.SWIG_ROOT}}/bin/swig -DEigen3_ROOT=${{env.EIGEN_ROOT}}
        cmake --build ${{env.BUILD_DIR}} --target r_install
        $PKG_PATH = Get-ChildItem -Path "${{env.BUILD_DIR}}/r/${{env.BUILD_TYPE}}/swigex0_*.zip" -File
        echo "MY_PKG=$PKG_PATH" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - uses: actions/upload-artifact@v3
      # Use specific artifact identifier for publishing all R versions
      with:
        name: windows-r-package-${{matrix.r_version}}
        path: ${{env.MY_PKG}}
    
  publish:
    needs: build
    if: ${{inputs.external_call == false}}
    
    # Only ubuntu can upload to CRAN easily (ssh)
    runs-on: ubuntu-latest
    
    steps:
    - uses: fabien-ors/cran-publish-action@v1
      with:
        host: ${{secrets.CG_HOST}}
        username: ${{secrets.CG_USR}}
        password: ${{secrets.CG_PWD}}
        repo-path: "/var/www/html/cran"

    #Â Delete the artifacts (for freeing storage space under github)
    - uses: geekyeggo/delete-artifact@v2
      with:
        name: windows-r-package-*